package eg.edu.alexu.csd.datastructure.hangman.cs16;
import java.io.*;
import java.util.*;
public class HangMan implements IHangman {

	private int guesses=1;
	private Dictionary<Integer,String> dictionary=new Hashtable<Integer,String>();//used it instead of array to not be limitied by a size ;
	private String randomWord;
	private String displayWord;
	
	
	void ReadFile(String[] words)throws FileNotFoundException ,IOException{
		String filename="dictionary.txt";
		FileReader fileReader=new FileReader(filename);
		//wrapping the fileReader with bufferreader to use readline() and to make program more efficient.
		BufferedReader bufferReader=new BufferedReader(fileReader);
	int i = 0;
	String line;
	do {
		line=bufferReader.readLine();
		words[i]=line;
		i++;
		
	}while(line!=null&&i<words.length);
	
	bufferReader.close();
		
	}
	
	
	public void setDictionary(String[] words) {
	try {
		ReadFile(words);
		// setting the dictionary.
	
		for(int i=0;i<words.length&&words[i]!=null;i++) {
			dictionary.put(i, words[i].toLowerCase());
			}System.out.println(dictionary);
	}catch(FileNotFoundException e) {
		
		System.out.println("file is not found");
	}catch(IOException e) {
		System.out.println(e);
		
	}
	
		
	}
	
	public String selectRandomSecretWord() {
		Random random=new Random();//making an instance from random class.
		int randomNumber;
		do {randomNumber=random.nextInt();}while(randomNumber<0);
		System.out.println(randomNumber);
		
		int size=dictionary.size();
		System.out.println(size);
		int index=randomNumber%size;
		System.out.println(index);
		randomWord=dictionary.get(index);
		int i=0;
		displayWord="";
		while(i<randomWord.length()) {
			if(randomWord.charAt(i)==' ') {
				displayWord+=' ';
			}
			
			displayWord=displayWord+"_"+" ";
		i++;
		}
		System.out.println("the secret word is "+randomWord);
		return dictionary.get(index);
		
	}
	
	public String guess(char c) throws Exception{
	
			boolean win=false;
		
			
		
		
		if((int)c ==0 || Character.isLetter(c)==false) {
			return null;	}
		//check if it is a buggy word
		//to make it case insensitive
	   boolean buggy=false;int countForSpaces=0;
		for(int i=0;i<randomWord.length();i++){
			char s=randomWord.charAt(i);
			if(Character.isLetter(s)|| s==' ') {
				if(s==' ') {countForSpaces++;//to handle corner case that a file contain an string of spaces
				}
				buggy=false;
			}
			else {
				
				buggy=true;
				break;			
			}
			
		}	
			
		if(buggy==true||countForSpaces==randomWord.length()) {
			
			throw new Exception("buggy word is selected from the file .");
		}
		//if it is not buggy
		else {c=Character.toLowerCase(c);
			int count1=0;
			boolean found =false;
			char []temp1 =randomWord.toCharArray();
			for(int j=0;j<temp1.length;j++) {
				if(temp1[j]==' ') {continue;}
				if(c==temp1[j]){
						found=true;
						temp1[j]=' ';
						break;
			    }
			  count1++;
			}	
			randomWord="";
			for(int n=0;n<temp1.length;n++) {
				randomWord=randomWord+temp1[n];
			}
			
			if(found==true) {
				int count2=0;
				char [] temp=displayWord.toCharArray();
				for(int z=0;z<temp.length;z++){
					if((temp[z]==' ') || (Character.isLetter(temp[z]))) {continue;}
					else if(count2==count1) {
						temp[z]=c;
						break;
					}
					else {count2++;}
				}
				displayWord="";
				for(int i=0;i<temp.length;i++) {
					displayWord=displayWord+temp[i];
				}
				System.out.println(displayWord);
			}else if(found==false) {this.guesses--;}
			
			for(int q=0;q<displayWord.length();q++) {
				if(displayWord.charAt(q)=='_') {
					win=false;
					break;
				}else {
					win=true;
				}
				
			}
				

			if(win) {
				System.out.println("you have won !");
				return null;
			}
			if(guesses==0) {
				throw new Exception("you have reached maximum number of guesses");
			}
				
		
			
			return displayWord;
		
		}
	
		}
	

public void setMaxWrongGuesses(int max) {
	if(max == 0) {guesses=1;}
	else {
	this.guesses=max;}
}





public static void main(String [] args) {
	
	String[]words=new String[9];
	HangMan obj=new HangMan();
	obj.setDictionary(words);
	obj.selectRandomSecretWord();
	char a='a';
	try{obj.guess(a);
	obj.guess('f');
	obj.guess('U');
	obj.guess('h');
	obj.guess('z');
	obj.guess('r');
	//obj.guess('d');
	}catch(Exception e) {
		
		System.out.println(e);
	}
	
	
	
} 


}
